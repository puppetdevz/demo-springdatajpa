<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- 1. dataSource 配置数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--<property name="driverClass" value="com.mysql.jdbc.Driver" />-->
        <property name="jdbcUrl" value="jdbc:mysql://192.168.160.129:3306/db4study" />
        <property name="user" value="puppet" />
        <property name="password" value="Axsw2022abc123ad!" />
    </bean>

    <!-- 2. 配置 entityManagerFactory 该项意味着将其交给 Spring 容器管理 -->
    <!-- 注意：class 值为全限定类名 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- packagesToScan 配置的是数据表对应的实体类所在包 -->
        <property name="packagesToScan" value="org.example.dao.entity" />
        <!-- JPA 的供应商 —— 即实现 JPA 规范的 ORM 框架 -->
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
        </property>
        <!-- JPA 的供应商适配器 -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- 是否自动创建数据库 -->
                <property name="generateDdl" value="false" />
                <!-- 指定数据库类型，要全大写（可以 “Ctrl + 右键” 查看支持的数据库类型枚举值 -->
                <property name="database" value="MYSQL" />
                <!-- 数据库方言：支持数据库特有的语法 -->
                <!-- 同样可以通过查看 org.hibernate.dialect 包下的实现类查看其他的数据库方言 -->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
                <!-- 是否在日志或控制台打印所生成的 SQL 语句 -->
                <property name="showSql" value="true" />
            </bean>
        </property>
        <!-- JPA 方言：高级特性 —— 这个在不同的 JPA 规范实现方中会有不同的特殊支持 -->
        <!-- 这里用的是 Hibernate 该实现方特有的高级特性 -->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>


    <!-- 3. 事务管理器 -->
    <!-- JPA 事务管理器  -->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory"
                  ref="entityManagerFactory" />
    </bean>

    <!-- 整合 SpringDataJPA -->
    <!-- base-package 值为 dao 接口所在包 -->
    <jpa:repositories base-package="org.example.dao"
                      transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory">
    </jpa:repositories>

    <!-- 4. txAdvice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 5. aop -->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* org.example.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
    </aop:config>

    <!-- 注解扫描：配置后，Spring 会扫描指定包下的所有注解 -->
    <context:component-scan base-package="org.example"></context:component-scan>

    <!-- 组装其它配置文件 -->
</beans>